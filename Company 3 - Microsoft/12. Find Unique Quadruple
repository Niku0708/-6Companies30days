class Solution{
    public:
    // 1 2 3 4 5
    // arr[] : int input array of integers
    // k : the quadruple sum required
    vector<vector<int> > fourSum(vector<int> &arr, int k) {
        // Your code goes here
        sort(arr.begin(), arr.end());
        int first, second;
        int n = arr.size();
        vector<vector<int>> ans;
        for(int i=0; i<n-3; i++)
        {
            first = i;
            if(k-arr[first]<0)
                break;
            for(int j=i+1; j<n-2; j++)
            {
                second = j;
                int left = j+1;
                int right = n-1;
                int target = k-arr[first]-arr[second];
                if(target<0)
                    break;
                while(left<right)
                {
                    int sum = arr[left] + arr[right];
                    if(sum == target){
                        if(ans.size()==0 or !(ans[ans.size()-1][0] == arr[first] and ans[ans.size()-1][1] == arr[second] and ans[ans.size()-1][2] == arr[left] and ans[ans.size()-1][3] == arr[right]))
                            ans.push_back({arr[first], arr[second], arr[left], arr[right]});
                        left++, right--;
                        continue;
                    }
                    else if(sum<target)
                        left++;
                    else
                        right--;
                }
            }
        }
        return ans;
    }
};
