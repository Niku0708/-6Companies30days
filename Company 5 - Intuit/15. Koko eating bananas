class Solution {
public:
    
    bool possible(vector<int> &piles, int h, int mid)
    {
        int hours = 0;
        for(int i=0; i<piles.size(); i++)
        {
            hours += piles[i]/mid;
            if(piles[i]%mid != 0)
                hours++;
            if(hours>h)
                return false;
        }
        return true;
    }
    
    int minEatingSpeed(vector<int>& piles, int h) {
        int lo = 1, hi = 0, ans = -1;
        for(int i=0; i<piles.size(); i++)
            hi = max(hi, piles[i]);
        while(lo<=hi)
        {
            int mid = (hi+lo)/2;
            if(possible(piles, h, mid))
            {
                ans = mid;
                hi = mid-1;
            }
            else
                lo = mid+1;
        }
        return ans;
    }
};
