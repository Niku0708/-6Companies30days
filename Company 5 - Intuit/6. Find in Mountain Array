/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
public:
    int findInMountainArray(int target, MountainArray &arr) {
        int peak = 0;
        int lo = 1, hi = arr.length()-2, mid;
        while(lo<=hi)
        {
            mid = (hi+lo)/2;
            if(arr.get(mid) > arr.get(mid+1))
            {
                peak = mid;
                hi = mid-1;
            }
            else
                lo = mid+1;
        }
        // cout<<peak<<"\n";
        lo = 0, hi = peak;
        while(lo<=hi)
        {
            mid = (hi+lo)/2;
            int current = arr.get(mid);
            // cout<<lo<<" "<<mid<<" "<<hi<<" "<<current<<"\n";
            if(current == target)
                return mid;
            else if(current < target)
                lo = mid+1;
            else
                hi = mid-1;
        }
        
        lo = peak+1, hi = arr.length()-1;
        while(lo<=hi)
        {
            mid = (hi+lo)/2;
            int current = arr.get(mid);
            // cout<<lo<<" "<<mid<<" "<<hi<<" "<<current<<"\n";
            if(current == target)
                return mid;
            else if(current > target)
                lo = mid+1;
            else
                hi = mid-1;
        }
        return -1;
    }
};
